#: import tnr tuner
# Make size_hint: [None, None] when you want to specify .size properties explicitly.


<StringTunerButton@Button>:
    size_hint: [1, 0.2]
    font_name: "./fonts/Arial"
    font_size: self.width * 0.2
    border: [2, 2, 2, 2]


<StringTuner>:
    orientation: "vertical"
    pos_hint: {"center_x": 0.5}
    StringTunerButton:
        text: u'\u25B2'
        on_release: root.increment_note_val()
    Label:
        size_hint: [1, 0.6]
        text: root.note_text
        font_size: self.height * 10/13 * 0.75
    StringTunerButton:
        text: u'\u25BC'
        on_release: root.decrement_note_val()


<SixStringTuner>:
    tuning: [s6.note_val, s5.note_val, s4.note_val, s3.note_val, s2.note_val, s1.note_val]
    orientation: "horizontal"
    pos_hint: {"center_y": 0.5}
    StringTuner:
        id: s6
    StringTuner:
        id: s5
    StringTuner:
        id: s4
    StringTuner:
        id: s3
    StringTuner:
        id: s2
    StringTuner:
        id: s1


<ControlBarButton@Button>:
    halign: "center"
    valign: "center"
    text_size: self.size
    texture_size: self.size
    border: [2,2,2,2]


<ControlBar>:
    orientation: "horizontal"
    pos_hint: {"center_y": 0.5}
    ControlBarButton:
        text: "-1"
        font_size: self.width*0.3
        on_press: root.tuner_ref.tune_up_or_down(-2)
    ControlBarButton:
        text: "-1/2"
        font_size: self.width*0.3
        on_release: root.tuner_ref.tune_up_or_down(-1)
    Spinner:
        size_hint: [2, 1]
        values: ["Standard", "Drop D", "Drop C", "Drop B"]
        font_size: self.width*0.15
        text_autoupdate: True
        border: [2,2,2,2]
        on_press: root.tuner_ref.tune_to(self.text)
        on_text: root.tuner_ref.tune_to(self.text)
    ControlBarButton:
        text: "+1/2"
        font_size: self.width*0.3
        on_release: root.tuner_ref.tune_up_or_down(1)
    ControlBarButton:
        text: "+1"
        font_size: self.width*0.3
        on_release: root.tuner_ref.tune_up_or_down(2)


<Tuner>:
    tuning: six_string_tuner.tuning
    size_hint: [None, None]
    size: [600, 300]
    top: self.top_prop
    canvas:
        Color:
            rgba: [1, 0, 0, 0.5]
        Line:
            rectangle: [*self.pos, *self.size]
    BoxLayout:
        id: box
        orientation: "vertical"
        size_hint: [None, None]
        pos_hint: {"center": [0.5, 0.5]}
        padding: [20, 20]
        spacing: 5
        canvas:
            Color:
                rgba: [1, 1, 1, 0.5]
            RoundedRectangle:
                pos: self.pos
                size: self.size
                radius: [15, 15]
            Color:
                rgba: [0,0,0,1]
            Line:
                rounded_rectangle: [*self.pos, *self.size, 15]
                width: 2
        ControlBar:
            tuner_ref: six_string_tuner
            size_hint: [1, 1/5]
        SixStringTuner:
            id: six_string_tuner
            size_hint: [1, 4/5]
